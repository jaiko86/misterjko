After college, I moved Seoul, Korea, where an average office worker might get paid $27k a year, 
and where a well paid developer is paid twice that, and made $5,000 a month only
teaching part-time. 

When I moved, that wasn't the plan. After quitting college, my plan was to look for
what job I could get without a degree, in a country where "even cows and pigs have
degrees," to borrow my dad's words. 

I have been teaching math since high school. I helped classmates with their problems. 
In college, I taught high school students for side income. All the while, however, 
I was getting frustrated with the textbooks, workbooks, and other resources. Even 
in the age of internet, most online resources were restricted to ye olde "sage on 
a stage" format, where a teacher speaks to the audience with some writings and visuals. 

To me, since I was a kid, math was something I could easily visualize in my head;
Static images that demonstrated a concepts and graphs made sense. After teaching 
for a while, I realized most people didn't have this ability. To them, beyond simple
arithmetic, math made no sense. It was as arbitrary as magic spells. 

So I began to take alternative route to teaching. Instead of simply logically 
walking through the solution, I began to draw math for them. One of the first topics
I drew was for teaching fraction. Kids learned to add fractions with different
denomation by 

----
After college, I moved to Korea, where an average worker gets paid $2,300 USD a month
and well-paid developers twice that. 

I started off teaching, but hit a limit.
  Traditional static image that makes sense to me, apparently didn't make sense to kids
  I made drawings and cutouts with paper to show kids how and why of math concepts. 
  It got cumbersome and repetitive, not to mention slow. 
  I made first online interactive app. Very simple, but it worked (Algebra Basics). 
  
From there, I built up. 
  Made more apps
  Made a platform that gathered those apps into one place and more. 
    -Auto problem generation
    -Auto grading
    -Track time / active time / etc
    -Auto notification for parents. 
---------
>>> After college, I moved to Korea, where an average worker gets paid $2,300 USD a month
and well-paid developers twice that. In a hyper competitive society that is Seoul, 
without a college degree, I went to making $6,000 a month teaching part time by 
combining my strengths to tap a niche market.

I started off teaching, but hit a limit.
  Traditional static image that makes sense to me, apparently didn't make sense to kids
  I made drawings and cutouts with paper to show kids how and why of math concepts. 
  It got cumbersome and repetitive, not to mention slow. 
  I made first online interactive app. Very simple, but it worked (Algebra Basics). 
  
From there, I built up. 
  Made more apps
  Made a platform that gathered those apps into one place and more. 
    -Auto problem generation
    -Auto grading
    -Track time / active time / etc
    -Auto notification for parents. 

>>> When I moved to Korea without a degree, I didn't have many options, so I 
simply continued to teach math as a private tutor. As I spent more time teaching
with traditional material, books and paper, I hit the limits of it more frequently. 
Static images, graphs, and even videos simply didn't do anything for the kids. 
They simply didn't get it. I made drawings and cutouts from paper to interact
with. I let them practice arithmetic with real money. I wanted to show them
that math is not just a set of arbitrary and random rules. 

>>> I realized what I was doing could be automated and made into an interactive app. 
I stitched together the first app, Algebra Basics, with jQuery and HTML and let 
a student use it on my iPad. It worked. The student grasped the concept. From there
I built more apps. As more apps were built, I decided to gather them into one 
place, and make a platform out of it. That platform was Steps Education. Besides
simply hosting a bunch of apps, now I could assign homework, track progress, note
active time (so students can't lie about how much time they spent on it), give 
students rewards, and notify parents of their missed homework -- all automatically. 

All the while I was making the platform, I was
  -Making marketing material
  - Customer service. They ramble, I decipher it into business objective
  -debugging / patching
  -Doing finance
  - ...
  - Product design, manage, etc. convincing parents of my approach, which I later
    learned was the very same as Montessori approach. 

>>> Not only did I develop the full stack -- the front and back end, server, and
database -- but also had to do other aspects of the business as well. I had to 
translate parents' concerns and gripes into business objective, manage finance, 
seek out more customers, and prep lessons. Hardest of the work was convincing 
parents of my approach, which I later learned was the same as Montessori's. 
(Korean parents, having been accustomed to education designed to cull the weak,
instead of nurturing growing minds, were ambivalent about the risk/payout of my 
approach.)

-(Tool proved effective
  No more prep time
  Credibility with parents, and kids couldn't lie any more. 
)


I learned:
  - I was successful because I recognized my strength and brought them together
    for the right market
  - Entrepreneurship is like cooking. 
  - If I can be successful without a degree in a hyper competitive market I can 
    do anything. 

>>> But the work paid off. In Korea, I wouldn't have made as much as just a programmer,
just a tutor. However, by combining my skills, I overcame my lack of a degree, 
widely regarded as the ticket to financial success. 

    
Now I'm back in the States
  - ... despite my success
  - I have a baby and immigrant wife. 
  - I am improving my coding skill. 
  
>>> Despite my success, however, I came back to the States. After meeting my wife
and having a baby, I realized it's not the environment in which I wanted to raise
a family. Since coming back, I've been helping my wife adjust to the life in the 
States, refining my coding skill, and applying to jobs. 

What I can bring
  - I always work with the bigger sense of purpose than my immediate task. 
  - I can and will inspire ambition. 

>>> Since coming back from Korea, I have been doing everything with a sense of bigger 
purpose; of how my work fits in the grand scheme of things. My experience gives me 
the confidence to inspire great ideas, and people to be ambitious, which will 
prove to be valuable in LinkedIn REACH program. 

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------





After college, I moved to Korea, where an average worker gets paid $2,300 USD a month
and well-paid developers twice that. In a hyper competitive society that is Seoul, 
without a college degree, I went to making $6,000 a month teaching part time by 
combining my strengths to tap a niche market.

 When I moved to Korea without a degree, I didn't have many options, so I 
simply continued to teach math as a private tutor, something I've been doing since 
high school. As I spent more time teaching
with traditional material, books and paper, I hit the limits of it more frequently. 

Static images, graphs, and even videos were nonsensical to kids. 
They simply didn't get it. So I made drawings and cutouts from paper for them to interact
with. I let them practice arithmetic with real money. I wanted to show them
that math is not just a set of arbitrary and random rules. 

 I realized what I was doing could be automated and made into an interactive app. 
I built the first app, Algebra Basics, with jQuery and HTML and let 
a student use it on my iPad. It worked. After a while the student grasped the concept. From there
I built more apps. As more apps were built, I decided to gather them into one 
place, and make a platform out of it. That platform was Steps Education. Besides
simply hosting a bunch of apps, now I could assign homework, track progress, note
active time (so students can't lie about how much time they spent on it), give 
students rewards, and notify parents of their missed homework -- all automatically. 

 Not only did I develop the full stack, but also had to do other aspects of the business as well. I had to 
translate parents' concerns into business objective, manage finance, 
seek out new clients, and prep lessons. Hardest of the work was convincing 
parents of my approach, which I later learned was the same as Montessori's. 
(Korean parents, having been accustomed to education designed to cull the weak,
instead of nurturing growing minds, were ambivalent about the risk/payout of my 
approach.)

But the work paid off. In Korea, I wouldn't have made as much as just a programmer,
or just a tutor. However, by combining my skills, I overcame my lack of a degree, 
widely regarded as the ticket to financial success. 

 Despite my success, however, I came back to the States. After meeting my wife
and having a baby, I realized environment in Korea wasn't suitable for raising a family. 
Since coming back, I've been helping my wife adjust to the life in the 
States, refining my coding skill, and applying to jobs. 

 Since my venture, I have been doing everything with a sense of bigger 
purpose; of how my work fits in the grand scheme. My experience gives me 
the confidence to inspire great ideas, and people to be ambitious, which, I hope,
will prove to be valuable in LinkedIn REACH program. 

--- 


After college, I moved to Korea, where an average worker gets paid $2,300 USD a month
and well-paid developers twice that. In a hyper competitive society that is Seoul, 
without a college degree, I went to making $6,000 a month teaching part time by 
combining my strengths to tap a niche market.

 When I moved to Korea without a degree, I didn't have many options, so I 
simply continued to teach math as a private tutor, something I've been doing since 
high school. However, as I spent more time teaching
with traditional material, books and paper, I hit the limits of it more frequently. 

Static images, graphs, and even videos were nonsensical to kids who already had 
skewed understanding of the basics. They simply didn't get it. Because they didn't
understand the basics, any "rule" was arbitrary and random as the spells in 
Harry Potter books. For example, they didn't understand why 1/2 + 1/3 wasn't 1/5. 
"Can't you just add the top and the bottom?" they'd ask. 

To address their inquiry, I would cut three sheets of identical square paper into 
two, three, and five equal pieces, respectively.
I would then put the 1/2 and 1/3 piece together to show that it does not equal two
the size of two 1/5 pieces. After dispelling their misconceptions, it was easier
to move forward with why we had to change the denomination. 

Another student had trouble understanding how carrying up/down worked
in adding/subtracting. We practiced with real Korean money. I helped him understand
place values with money denominations (10, 100, and 1000 won). After adding, to have 
the least number of coins/bills, he had to exchange, say, thirteen 100 won coins
to one 1000 won bill and three 100 won coins. 

My approach worked, but it was tedious, and only during lesson. After the lesson,
the students had hard time recreating what we did during class. Notes had too many
words and seemed too technical to them (remember, these are struggling students).

I searched for apps that could do what I wanted, but they rarely existed, and in
different places. So I decided to build my own apps using jQuery. I let a student
try one of my firs apps, Algebra Basics (http://misterjko.com/#sect-algebra-basics).
It worked. After a while the student grasped the concept. From there
I built more apps. As more apps were built, I decided to gather them into one 
place, and make a platform out of it. That platform was Steps Education. Besides
simply hosting a bunch of apps, now I could assign homework, track progress, note
active time (so students can't lie about how much time they spent on it), give 
students rewards, and notify parents of their missed homework -- all automatically. 

 Not only did I develop the full stack, but also had to do other aspects of the business as well. I had to 
translate parents' concerns into business objective, manage finance, 
seek out new clients, and prep lessons. Hardest of the work was convincing 
parents of my approach, which I later learned was the same as Montessori's. 
(Korean parents, having been accustomed to education designed to cull the weak,
instead of nurturing growing minds, were ambivalent about the risk/payout of my 
approach.)

But the work paid off. In Korea, I wouldn't have made as much as just a programmer,
or just a tutor. However, by combining my skills, I overcame my lack of a degree, 
widely regarded as the ticket to financial success. 

 Despite my success, however, I came back to the States. After meeting my wife
and having a baby, I realized political, social, and political environments in 
Korea were not suitable for raising a family.  Since coming back, I've been helping my wife adjust to the life in the 
States, refining my coding skill, and applying to jobs. 

 Since my venture, I have been doing everything with a sense of bigger 
purpose; of how my work fits in the grand scheme. My experience gives me 
the confidence to inspire great ideas, and people to be ambitious, which, I hope,
will prove to be valuable in LinkedIn REACH program. 

--- 
explain more of the problem that i solved. Exactly what kind of problem Kevin 
and other students had.
Expand the last part about inspiring and confidence. 
-social/political/natural environment of korea
-Leadership to kids
-How I prevented studetns from lying. 
-spells from harry potter

-My approach was two folds:
--To help students understand
--If not understand, at least get really good at memorizing. 

The resources were sporadic. My aim was to make Steps Education the HUB
of all education material