apply to triplebyte again, and gun.io
try vue/webpack work flow with a deadsimple app
try making trello app with vue. 
try making dependency tech tree type of to-do list, kinda like in Civ's tech tree. 

apply to some fucking places, even if the pay is shit. 

-learn a bit of canvas

-Make a filter with Vue that does autocomplete from a list of things

-use vue to make the honeycomb 

-bundle things with webpack

Redo website:
-Make GUI for some of the stuff
-use web pack to bundle things
-Analysis for where recruiters look
  -hit log in Node.js
-nav:
  -make the track circle draggable to different places on the track to nav
  -clicking on the track goes to that place in the page
  -make the track and the items separate. 
  -make the track circle size independent of the track size
  -make it adaptable for different sites.
  

-use express to make current site into SPA
-use express to make some stuff
-use canvas to make tree building
-make filter/data visualization with Vue 
  -make the components with vue

-put up all the work

UW 	    UW logo first learned to code
Seoul	  Seoul Silhouette
Steps	  Giant Steps logo
Seattle	Back in the States, specifically Seattle region, looking for new opportunity

Learn how to do following:
-login system
-payment system integration
-Google analytics
-How web components work
-how PWA work
-how SEO work


personal website improvements:
-portfolio section: 
  -make it with vue

make portfolio page
make links work with hash

remove and Crossword to .gitignore


----
scroll direction detection:
 //Firefox
 $(window).bind('DOMMouseScroll', function(e){
   if(e.originalEvent.detail > 0) {
       //scroll down
       console.log('Down');
   } else {
       //scroll up
       console.log('Up');
   }

   //prevent page fom scrolling
   return false;
});

//IE, Opera, Safari
$(window).bind('mousewheel', function(e){
 if(e.originalEvent.wheelDelta < 0) {
     //scroll down
     console.log('Down');
 }else {
     //scroll up
     console.log('Up');
 }

 //prevent page fom scrolling
 return false;
});

https://stackoverflow.com/questions/7154967/how-to-detect-scroll-direction
-------------------------

ORGANIZE THIS SHIT

Build from ground up with OOP and Vue

Make the counter for each section pressed. 
-Can node do what PHP/Apache usually handles?


redo with the information I am going to write for the LinkedIn REACH program
Also, put following stuff in the website and resume somewhere somehow:
-self starter -- I learned everything almost all on my own
-passionate,
-problem solver,
  -See if I can build a "developers near you" ad

get back to Brian's company just in case

Change resume to say the apps on steps math is modular, employs lazy loading
-my portfolio website
    -https://www.codementor.io/learn-programming/12-important-things-to-include-in-web-dev-portfolios



Make the page without animation for mobile (for screensize smaller than full desktop: 1000px)

put in the menu first on the site
improve mobile view of the site

make things with vue:
-To-do list
-refactor/combine the scroll-dependent animations
-Make the headers switch as page scrolls
-main nav
-carousel
-timeline
-section nav for portfolio
    -Make the section nav button clickable area bigger

-Any other way to make the website more fun?
-See if I can create chat client
-visual balancing a binary tree
-OTrio
--multiplayer
--against computer
-visualized algorithm
-wife's website

Make KenKen smaller GUI (for smaller screen)
-> Maybe make a table instead?
-> Make non-gui that shows all the solution sets that it iterates over?


menu toggle:
-triple bar <--> close <--> "<" (go back)


Make myself searchable on the web

Add a chat client

put in more animations

text formatter:
  - If I save a file that's being watched, 
    it will automatically make sure each line is less than 80 bytes long. 

$(document).scrollTop(620);

word relay game:
-Inspired from 끝말잇기. 
-A player starts with a word. For example, tad. 
-The next player can do the following to create a new word from the given word:
  -add a new letter, take out a letter, or both
  -switch the position of two letters
  -for every 6 letters of the given word, one action can be taken. 
- So, for example, the second player might take out 't' and put in 'b' in its place
  create 'bad'
- the next player could put in 'l' in the middle to create 'bald'.
- and so on.

------------
Advice from TopTal:
use any static analysis tool
ES linter
testing
packaging

-------

2 paying customers

Vue.js MySQL

